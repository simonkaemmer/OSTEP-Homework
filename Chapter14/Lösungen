Aufgabe 2.

This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
--Type <RET> for more, q to quit, c to continue without paging--run
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from null...
(gdb) run
Starting program: /home/simon/Dokumente/BSYS/Chapter14/null 

Program received signal SIGSEGV, Segmentation fault.
0x0000555555555161 in main () at null.c:8
Warnung: Source file is more recent than executable.
8           printf("Value: %d\n", *x);
(gdb) 


Aufgabe 3.

==44121== Invalid read of size 4
==44121==    at 0x109161: main (null.c:8)
==44121==  Address 0x3 is not stack'd, malloc'd or (recently) free'd

Offensichtlich erkennt Valgrind den NULL-read auch als fehlerhaft, und zeigt an, wo der Fehler im Code ist.

4. 

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from nofree...
(gdb) run
Starting program: /home/simon/Dokumente/BSYS/Chapter14/nofree 
[Inferior 1 (process 45070) exited normally]
(gdb) run
Starting program: /home/simon/Dokumente/BSYS/Chapter14/nofree 
[Inferior 1 (process 45106) exited normally]
(gdb) q

--> GDB zeigt keine Fehler an, er ist auch kein Tool daf체r, Speicherprobleme festzustellen
----------------------------------------------------------------
==45221== Memcheck, a memory error detector
==45221== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==45221== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==45221== Command: ./nofree
==45221== 
==45221== 
==45221== HEAP SUMMARY:
==45221==     in use at exit: 4 bytes in 1 blocks
==45221==   total heap usage: 1 allocs, 0 frees, 4 bytes allocated
==45221== 
==45221== 4 bytes in 1 blocks are definitely lost in loss record 1 of 1
==45221==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==45221==    by 0x10915E: main (nofree.c:7)
==45221== 
==45221== LEAK SUMMARY:
==45221==    definitely lost: 4 bytes in 1 blocks
==45221==    indirectly lost: 0 bytes in 0 blocks
==45221==      possibly lost: 0 bytes in 0 blocks
==45221==    still reachable: 0 bytes in 0 blocks
==45221==         suppressed: 0 bytes in 0 blocks
==45221== 
==45221== For lists of detected and suppressed errors, rerun with: -s
==45221== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

valgrind findet und bem채ngelt den malloc als zwar allocated, aber nicht wieder freigegeben.


Aufgabe 5:

Das Programm l채uft zwar, ist aber nicht korrekt. Das Array geht von 0 bis 99, und wir schreiben aber direkt hinter den allokierten Bereich.

Aufgabe 6:

simon@SimonsLaptop:~/Dokumente/BSYS/Chapter14$ ./printafterfree
malloc(): corrupted top size
Abgebrochen (Speicherabzug geschrieben)


==47741== Command: ./printafterfree
==47741== 
==47741== Invalid write of size 4
==47741==    at 0x1091C0: main (printafterfree.c:11)
==47741==  Address 0x4a581d0 is 0 bytes after a block of size 400 alloc'd
==47741==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==47741==    by 0x10919E: main (printafterfree.c:8)
==47741== 
==47741== Invalid read of size 4
==47741==    at 0x1091E9: main (printafterfree.c:15)
==47741==  Address 0x4a581cc is 396 bytes inside a block of size 400 free'd
==47741==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==47741==    by 0x1091DE: main (printafterfree.c:14)
==47741==  Block was alloc'd at
==47741==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==47741==    by 0x10919E: main (printafterfree.c:8)
==47741== 
--47741-- VALGRIND INTERNAL ERROR: Valgrind received a signal 11 (SIGSEGV) - exiting
--47741-- si_code=1;  Faulting address: 0x104A581E8;  sp: 0x1002ca9e40

valgrind: the 'impossible' happened:
   Killed by fatal signal

host stacktrace:
==47741==    at 0x5805160F: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==47741==    by 0x58005BF7: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==47741==    by 0x580A7204: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==47741==    by 0x580F5FD4: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 47741)
==47741==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==47741==    by 0x48E7E83: _IO_file_doallocate (filedoalloc.c:101)
==47741==    by 0x48F804F: _IO_doallocbuf (genops.c:347)
==47741==    by 0x48F70AF: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:745)
==47741==    by 0x48F5834: _IO_new_file_xsputn (fileops.c:1244)
==47741==    by 0x48F5834: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1197)
==47741==    by 0x48DCAF1: __vfprintf_internal (vfprintf-internal.c:1373)
==47741==    by 0x48C7EBE: printf (printf.c:33)
==47741==    by 0x1091FD: main (printafterfree.c:15)
client stack range: [0x1FFEFFD000 0x1FFF000FFF] client SP: 0x1FFEFFF3A0
valgrind stack range: [0x1002BAA000 0x1002CA9FFF] top usage: 9480 of 1048576


Warum gibt es einen write fault?

Aufgabe 7.

Der Compiler merkt nichts, weil die Syntax soweit korrekt ist, 
Sobald man das Programm ausf체hrt, wird ein Fehler geworfen. Mit 

GDB ist dabei nicht sonderlich hilfreich: 

Starting program: /home/simon/Dokumente/BSYS/Chapter14/aufgabe7 
free(): invalid pointer

o
==53367== Command: ./aufgabe7
==53367== 
==53367== Invalid free() / delete / delete[] / realloc()
==53367==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==53367==    by 0x10919C: main (aufgabe7.c:9)
==53367==  Address 0x4a58108 is 200 bytes inside a block of size 400 alloc'd
==53367==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==53367==    by 0x10917E: main (aufgabe7.c:7)
==53367== 
==53367== 


Valgrind zeigt an, was genau schief geht, und wo die STele im Code ist.

Aufgabe 8.



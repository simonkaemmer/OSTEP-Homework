Aufgabe 1:

Eigentlich brauchen wir immer nur ein Register, dass auf die höchste
Ebene (2 Wege: Auf das PageDir, 3 Wege: auf die PageDir welche die weiteren Pagedirs aufspannt) zeigt.

Aufgabe 2:
------------------------------------------------
Vorgehen: 

1. Ersten 5 bits für Offset im PDBR
2. Page aus PDBR holen
3. Mittleren 5 bits sind offset in Page
4. Wert aus Page lesen, muss 8 lang sein, erstes bit ist das valid bit
5. Restlichen 7 bit sind PFN wenn valid
6. Addresse zusammenfügen und auslesen


Pagesize: 32Byte --> 5 Bit Offset
Virtual Addressspace: 32KB --> 1024 Pages --> 15bits

PhysMem: 12bits, 5offset


-s 0

611C : 11000 01000 11100

11000 = Stelle im PDBR: 24

In Byte 24 steht: a1 (1 0100001)(33)
In Page 33 mit Index 8 steht: b5 (1 0110101)(53)
Phys Address: 0110101 11100 --> Value 08


3da8: 01111 01101 01000 (15, 12, 8)

01111 = Stelle im PDBR: 15
In Byte 15 steht: d6 (1 1010110)(86)
In Page 86 mit Index 12 steht: 7f (0 1111111)(63)
Invalid


17f5: 00101 11111 10101 (5, 31, 21)

Stelle im PDBR: d4(1 1010100) (84)
In Page 84 mit Offset 31 steht: ce (1 1001110)

Phys Address: 1001110 10101 (78, 21) --> 1c


s- 1

6c74: 11011 00011 10100 (27, 3, 20)

27. Stelle im PDBR: a0 (1 0100000)(32)
In Page 32 steht: e1 (1 1100001) (97)
Phys Address: 1100001 10100 --> 06



Aufgabe 3.
Ich denke, weil das ganze wie ein Baum aufgebaut ist, haben wir den Vorteil der Lokalität, und somit schnelle Zugriffe. 